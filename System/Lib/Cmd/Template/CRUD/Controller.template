
use \CRUD\Table       as Table;
use \CRUD\Table\Order as Order;
use \CRUD\Form        as Form;
use \CRUD\Show        as Show;

class <?php echo $controllerName;?> extends AdminController {
  
  public function __construct() {
    parent::__construct();
<?php if ($hasParent) { ?>

    ifErrorTo('Admin<?php echo $parentControllerName;?>Index');

    $this->methedIn(function() {
      return $this->parent = <?php echo $parentModelName;?>::one('id = ?', Router::param('<?php echo $parentModelFkey;?>'));
    });

    Router::aliasAppendParam('Admin<?php echo $controllerName;?>', $this->parent);
<?php } ?>

    ifErrorTo('Admin<?php echo $controllerName;?>Index');

    $this->methedIn('edit', 'update', 'delete', 'show'<?php echo $enable ? ", 'enable'" : '';?>, function() {
      return $this->obj = <?php echo $modelName;?>::one('id = ?', Router::param('id'));
    });

    $this->view->with('title', <?php echo $hasParent ? "['" . $parentTitle . "', '" . $title . "']" : "'" . $title . "'";?>)
               ->with('currentUrl', Url::router('Admin<?php echo $hasParent ? $parentControllerName : $controllerName;?>Index'));
  }

  public function index() {
<?php if ($hasParent) {
        if ($sort) { ?>
    $table = Table::create('<?php echo $modelName;?>', ['order' => Table\Order::desc('sort'), 'where' => ['<?php echo $parentModelFkey;?> = ?', $this->parent->id]])
                  ->setAddUrl(Url::router('Admin<?php echo $controllerName;?>Add'))
                  ->setSortUrl(Url::router('Admin<?php echo $controllerName;?>Sort'))
                  ->setBackUrl(Url::router('Admin<?php echo $parentControllerName;?>Show', $this->parent), '回內容頁');
<?php   } else { ?>
    $table = Table::create('<?php echo $modelName;?>', ['where' => ['<?php echo $parentModelFkey;?> = ?', $this->parent->id]])
                  ->setAddUrl(Url::router('Admin<?php echo $controllerName;?>Add'))
                  ->setBackUrl(Url::router('Admin<?php echo $parentControllerName;?>Show', $this->parent), '回內容頁');
<?php   }
      } else {
        if ($sort) { ?>
    $table = Table::create('<?php echo $modelName;?>', ['order' => Table\Order::desc('sort')])
                  ->setAddUrl(Url::router('Admin<?php echo $controllerName;?>Add'))
                  ->setSortUrl(Url::router('Admin<?php echo $controllerName;?>Sort'));
<?php   } else { ?>
    $table = Table::create('<?php echo $modelName;?>')
                  ->setAddUrl(Url::router('Admin<?php echo $controllerName;?>Add'));
<?php   }
      } ?>

    return $this->view->with('table', $table);
  }
  
  public function add() {
    $form = Form::create()
                ->setActionUrl(Url::router('Admin<?php echo $controllerName;?>Create'))
                ->setBackUrl(Url::router('Admin<?php echo $controllerName;?>Index'));

    return $this->view->with('form', $form);
  }
  
  public function create() {
    ifErrorTo('Admin<?php echo $controllerName;?>Add');

    $params = Validator::post(function() {
<?php if ($enable) { ?>
      Validator::need('enable', '啟動')->inEnum(array_keys(<?php echo $modelName;?>::ENABLE));
<?php }
      if ($texts) {
        foreach ($texts as $text) { ?>
      Validator::<?php echo $text['need'] ? 'need' : 'maybe';?>('<?php echo $text['name'];?>', '<?php echo $text['text'];?>')->isString(<?php echo $text['need'] ? '1' : '0';?>, 190);
<?php   }
      }
      if ($textareas) {
        foreach ($textareas as $textarea) { ?>
      Validator::<?php echo $textarea['need'] ? 'need' : 'maybe';?>('<?php echo $textarea['name'];?>', '<?php echo $textarea['text'];?>')<?php echo isset($textarea['type']) && $textarea['type'] == 'ckeditor' ? '->allowableTags(false)' : '';?>->isString(<?php echo $textarea['need'] ? '1' : '0';?>)<?php echo empty($textarea['type']) || $textarea['type'] !== 'ckeditor' ? '->allowableTags(false)' : '';?>;
<?php   }
      } ?>
    });

<?php if ($hasParent) {
        if ($sort) { ?>
    $params['sort'] = <?php echo $modelName;?>::count('<?php echo $parentModelFkey;?> = ?', $this->parent->id);
<?php   } ?>
    $params['<?php echo $parentModelFkey;?>'] = $this->parent->id;
<?php } else {
        if ($sort) { ?>
    $params['sort'] = <?php echo $modelName;?>::count();
<?php   }
      } ?>

<?php if ($images) { ?>
    $files = Validator::file(function() {
<?php   foreach ($images as $image) { ?>
      Validator::<?php echo $image['need'] ? 'need' : 'maybe';?>('<?php echo $image['name'];?>', '<?php echo $image['text'];?>')->isUpload()<?php echo empty($image['formats']) ? '' : "->formatFilter([" . implode(', ', array_map(function($format) { return "'" . $format . "'";}, $image['formats'])) . "])";?>;
<?php   } ?>
    });
<?php } ?>

<?php if ($images) { ?>
    transaction(function() use (&$params, &$files) {
      if (!$obj = <?php echo $modelName;?>::create($params))
        return false;
      return $obj->putFiles($files);
    });
<?php } else { ?>
    transaction(function() use (&$params) {
      return <?php echo $modelName;?>::create($params);
    });
<?php } ?>
   
    return Url::refreshWithSuccessFlash(Url::router('Admin<?php echo $controllerName;?>Index'), '新增成功！');
  }

  public function edit() {
    $form = Form::create($this->obj)
                ->setActionUrl(Url::router('Admin<?php echo $controllerName;?>Update', $this->obj))
                ->setBackUrl(Url::router('Admin<?php echo $controllerName;?>Index'));
    
    return $this->view->with('form', $form);
  }
  
  public function update() {
    ifErrorTo('Admin<?php echo $controllerName;?>Edit', $this->obj);

    $params = Validator::post(function() {
<?php if ($enable) { ?>
      Validator::need('enable', '啟動')->inEnum(array_keys(<?php echo $modelName;?>::ENABLE));
<?php }
      if ($texts) {
        foreach ($texts as $text) { ?>
      Validator::<?php echo $text['need'] ? 'need' : 'maybe';?>('<?php echo $text['name'];?>', '<?php echo $text['text'];?>')->isString(<?php echo $text['need'] ? '1' : '0';?>, 190);
<?php   }
      }
      if ($textareas) {
        foreach ($textareas as $textarea) { ?>
      Validator::<?php echo $textarea['need'] ? 'need' : 'maybe';?>('<?php echo $textarea['name'];?>', '<?php echo $textarea['text'];?>')<?php echo isset($textarea['type']) && $textarea['type'] == 'ckeditor' ? '->allowableTags(false)' : '';?>->isString(<?php echo $textarea['need'] ? '1' : '0';?>)<?php echo empty($textarea['type']) || $textarea['type'] !== 'ckeditor' ? '->allowableTags(false)' : '';?>;
<?php   }
      } ?>
    });

<?php if ($images) { ?>
    $files = Validator::file(function() {
<?php   foreach ($images as $image) { ?>
      Validator::maybe('<?php echo $image['name'];?>', '<?php echo $image['text'];?>')->default(null)->isUpload()<?php echo empty($image['formats']) ? '' : "->formatFilter([" . implode(', ', array_map(function($format) { return "'" . $format . "'";}, $image['formats'])) . "])";?>;
<?php   } ?>
    });
<?php } ?>

<?php if ($images) { ?>
    transaction(function() use (&$params, &$files) {
      return $this->obj->setColumns($params)
          && $this->obj->putFiles($files)
          && $this->obj->save();
    });
<?php } else { ?>
    transaction(function() use (&$params) {
      return $this->obj->setColumns($params)
          && $this->obj->save();
    });
<?php } ?>
    
    return Url::refreshWithSuccessFlash(Url::router('Admin<?php echo $controllerName;?>Index'), '修改成功！');
  }

  public function show() {
    $show = Show::create($this->obj)
                ->setBackUrl(Url::router('Admin<?php echo $controllerName;?>Index'), '回列表');
    
    return $this->view->with('show', $show);
  }
  
  public function delete() {
    ifErrorTo('Admin<?php echo $controllerName;?>Index');
    
    transaction(function() {
      return $this->obj->delete();
    });

    return Url::refreshWithSuccessFlash(Url::router('Admin<?php echo $controllerName;?>Index'), '刪除成功！');
  }

<?php if ($sort) { ?>
  public function sort() {
    ifApiError(function() { return ['messages' => func_get_args()]; });

    $params = validator::post(function() {
      Validator::need('changes', '排序資料')->isArray(2)->map(function($param) {
        if (!isset($param['id'], $param['ori'], $param['now']))
          return null;

        if (!$obj = <?php echo $modelName;?>::one(['select' => 'id,sort', 'where' => ['id = ? AND sort = ?', $param['id'], $param['ori']]]))
          return null;

        return ['obj' => $obj, 'sort' => $param['now']];
      })->filter()->isArray(2);
    });

    transaction(function() use (&$params) {
      foreach ($params['changes'] as $change)
        $change['obj']->sort = $change['sort'];

      foreach ($params['changes'] as $change)
        if (!$change['obj']->save())
          return false;

      return true;
    });

    return array_map(function($change) { return [
      'id' => $change['obj']->id,
      'sort' => $change['obj']->sort];
    }, $params['changes']);
  }
<?php }
      if ($enable) { ?>
  public function enable() {
    ifApiError(function() { return ['messages' => func_get_args()]; });
    
    $params = Validator::post(function() {
      Validator::need('enable', '啟用')->inEnum(array_keys(<?php echo $modelName;?>::ENABLE));
    });
    
    transaction(function() use (&$params) {
      return $this->obj->setColumns($params)
          && $this->obj->save();
    });

    return $params;
  }
<?php } ?>
}